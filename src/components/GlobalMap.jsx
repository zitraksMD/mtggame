// src/components/GlobalMap.jsx
import React, { useEffect, useCallback } from 'react'; // useState –∏ useRef —É–¥–∞–ª–µ–Ω—ã, —Ç–∞–∫ –∫–∞–∫ overlay –∏ –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ–ª—å—à–µ –Ω–µ —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∑–¥–µ—Å—å
import { motion } from 'framer-motion';
import './GlobalMap.scss'; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Å—Ç–∏–ª–∏ –≤—Å–µ –µ—â–µ –Ω—É–∂–Ω—ã
import useGameStore from '../store/useGameStore';
// –ù–ï–¢ TransitionOverlay –∑–¥–µ—Å—å –∏ –µ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
// useLocation –∏ useNavigate —É–¥–∞–ª–µ–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å—ã –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤—ã—à–µ
import chapter1Data from '../data/chapters/chapter1/chapter1Data.js';
import chapter2Data from '../data/chapters/chapter2/chapter2Data.js';
// import chapter3Data from '../data/chapters/chapter3/chapter3Data.js';

const allChaptersLevelData = {
  1: chapter1Data?.levels || [],
  2: chapter2Data?.levels || [],
  // 3: chapter3Data?.levels || [],
};

const continentsData = [
  {
    id: 'necroworld_continent',
    name: '–ù–µ–∫—Ä–æ–º–∏—Ä',
    image: '/assets/continents/necroworld_map_icon.png',
    x: 200, y: 300,
    chapters: [1],
    startChapterId: 1,
    isImplemented: true,
  },
  {
    id: 'inferno_continent',
    name: '–ò–Ω—Ñ–µ—Ä–Ω–æ',
    image: '/assets/continents/inferno_map_icon.png',
    x: 600, y: 400,
    chapters: [2],
    startChapterId: 2,
    isImplemented: false,
  },
  // ... –¥—Ä—É–≥–∏–µ –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç—ã ...
];

// globalMapContentVariants —É–¥–∞–ª–µ–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –∞–Ω–∏–º–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —ç–∫—Ä–∞–Ω–∞ —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è "—à—Ç–æ—Ä–∫–∞–º–∏" –∏–∑–≤–Ω–µ
// const globalMapContentVariants = {
//   hidden: { opacity: 0 },
//   visible: { opacity: 1, transition: { duration: 0.3, delay: 0.1 } },
//   exit: { opacity: 0, transition: { duration: 0.15 } }
// };

const GlobalMap = ({
  onSelectContinent,
  onGoBackToChapterMap,
}) => {
  const isChapterCompleted = useGameStore(state => state.isChapterCompleted);
  // location –∏ navigate —É–¥–∞–ª–µ–Ω—ã

  // –õ–æ–≥–∏–∫–∞ Overlay (isOverlayActive, triggerOpenOverlay, triggerCloseOverlay, pendingNavigationCallbackRef) —É–¥–∞–ª–µ–Ω–∞

  // useEffect –∏–∑ –∫–æ–¥1: –ü—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è —à—Ç–æ—Ä–æ–∫ —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä
  useEffect(() => {
    const store = useGameStore.getState();
    // –ï—Å–ª–∏ –º—ã –ø—Ä–∏—à–ª–∏ –Ω–∞ —ç—Ç–æ—Ç —ç–∫—Ä–∞–Ω –∏ —à—Ç–æ—Ä–∫–∏ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è —É–∂–µ
    if (!store.isScreenTransitioning || store.transitionAction !== 'opening') {
      // console.log("GlobalMap: Mounted, ensuring screen is opening.");
      store.ensureScreenIsOpening();
    }
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // handleOverlayOpenComplete –∏ handleOverlayCloseComplete —É–¥–∞–ª–µ–Ω—ã

  // navigateWithTransition —É–¥–∞–ª–µ–Ω

  // handleContinentClick –∏–∑ –∫–æ–¥1:
  const handleContinentClick = useCallback((continent) => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∏ isImplemented –∏ isUnlockedCalculated –æ—Å—Ç–∞—é—Ç—Å—è –∏–∑ –∫–æ–¥2
    if (!continent.isImplemented) {
      alert(`–ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞ "${continent.name}" –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.`);
      return;
    }
    if (!continent.isUnlockedCalculated) {
      alert(`–ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç "${continent.name}" –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω! –ü—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≥–ª–∞–≤—ã.`);
      return;
    }

    if (typeof onSelectContinent === 'function') {
      // onSelectContinent –≤ App.jsx –£–ñ–ï –í–´–ó–û–í–ï–¢ startScreenTransition (–∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ store)
      onSelectContinent(continent.startChapterId);
    }
  }, [onSelectContinent]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å navigateWithTransition —É–¥–∞–ª–µ–Ω–∞

  // handleBackToWorldMapClick –∏–∑ –∫–æ–¥1:
  const handleBackToWorldMapClick = useCallback(() => {
    if (typeof onGoBackToChapterMap === 'function') {
      // onGoBackToChapterMap –≤ App.jsx –£–ñ–ï –í–´–ó–û–í–ï–¢ startScreenTransition (–∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ store)
      onGoBackToChapterMap();
    }
  }, [onGoBackToChapterMap]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å navigateWithTransition —É–¥–∞–ª–µ–Ω–∞

  return (
    // –ê—Ç—Ä–∏–±—É—Ç—ã variants, initial, animate, exit –¥–ª—è —Å–∞–º–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ —É–¥–∞–ª–µ–Ω—ã,
    // —Ç–∞–∫ –∫–∞–∫ –∞–Ω–∏–º–∞—Ü–∏–µ–π —É–ø—Ä–∞–≤–ª—è—é—Ç "—à—Ç–æ—Ä–∫–∏" –∏–∑ App.jsx –∏–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
    // –ö–æ–Ω—Ç–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–∏–º —Å—Ä–∞–∑—É.
    <motion.div className="global-map-screen">
      {/* –ù–ï–¢ TransitionOverlay –ó–î–ï–°–¨ */}

      <div className="global-map-header">
        <h1>–ö–∞—Ä—Ç–∞ –ú–∏—Ä–∞</h1>
        <button onClick={handleBackToWorldMapClick} className="map-back-button">
          &#x21A9; –ù–∞–∑–∞–¥ –∫ –ö–∞—Ä—Ç–µ –ì–ª–∞–≤
        </button>
      </div>

      <div className="global-map-background">
        {continentsData.map((continent, continentIndex) => {
          let isCurrentContinentUnlocked = false;
          if (continentIndex === 0) {
            isCurrentContinentUnlocked = true;
          } else {
            const prevContinent = continentsData[continentIndex - 1];
            let prevContinentAllChaptersCompleted = true;

            if (prevContinent && prevContinent.isImplemented && prevContinent.chapters && Array.isArray(prevContinent.chapters)) {
              for (const chapterId of prevContinent.chapters) {
                const levelsOfThisChapter = allChaptersLevelData[chapterId];
                if (typeof isChapterCompleted !== 'function' || !levelsOfThisChapter || !isChapterCompleted(chapterId, levelsOfThisChapter)) {
                  prevContinentAllChaptersCompleted = false;
                  break;
                }
              }
            } else {
              prevContinentAllChaptersCompleted = false;
              if (prevContinent && !prevContinent.isImplemented) {
                console.warn(`–ü—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç (id: ${prevContinent.id}) –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω. –ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç "${continent.name}" –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`);
              } else if (prevContinent) {
                console.warn(`–ü—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç (id: ${prevContinent.id}) –Ω–µ –∏–º–µ–µ—Ç —Å–ø–∏—Å–∫–∞ –≥–ª–∞–≤. –ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç "${continent.name}" –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`);
              }
            }
            isCurrentContinentUnlocked = prevContinentAllChaptersCompleted;
          }

          const continentClasses = `continent-node ${isCurrentContinentUnlocked ? 'unlocked' : 'locked'} ${!continent.isImplemented ? 'not-implemented' : ''}`;

          return (
            <div
              key={continent.id}
              className={continentClasses}
              style={{
                position: 'absolute',
                top: `${continent.y}px`,
                left: `${continent.x}px`,
              }}
              // –ü–µ—Ä–µ–¥–∞–µ–º isUnlockedCalculated –≤ –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ
              onClick={() => handleContinentClick({ ...continent, isUnlockedCalculated: isCurrentContinentUnlocked })}
              title={continent.name}
            >
              <img src={continent.image} alt={continent.name} className="continent-image" />
              <span className="continent-label">{continent.name}</span>
              {!isCurrentContinentUnlocked && continent.isImplemented && <div className="continent-lock-icon">üîí</div>}
              {!continent.isImplemented && <div className="continent-status-label">–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</div>}
            </div>
          );
        })}
      </div>
    </motion.div>
  );
};

export default GlobalMap;