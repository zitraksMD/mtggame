// MainMenu.scss

// --- Корневой элемент (.main-menu) ---
.main-menu {
  background: url("/assets/main-screen-bg.png") no-repeat center center / cover;
  width: 100%;
  height: 100%;
  position: absolute;
  overflow: hidden;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

// --- Контейнер для просмотра карты главы (Как было) ---
.chapter-view-container {
  width: 100%;
  height: 100%;
  position: absolute; // Занимает все пространство .main-menu
  top: 0;
  left: 0;
  overflow: hidden;   // Обрезаем карту главы по границам контейнера
  cursor: grab;       // Курсор "схватить" по умолчанию
  z-index: 1;         // Под новыми кнопками UI
}

// --- Сам контент карты главы (Как было) ---
.chapter-map-content {
  position: relative; // Чтобы дочерние .level-node позиционировались относительно него
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center; // Или top left
  transform-origin: 0 0;

  &.dragging {
    cursor: grabbing;
  }
}

// --- SVG и Узлы Уровней ---
.chapter-level-svg-connections {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none; // Не мешать кликам
  z-index: 1; // Под узлами, над картой
}

// Стили для соединительных линий (обновлено из код1)
.level-connection-path {
  stroke: rgba(255, 255, 255, 0.3); // Цвет неактивной связи
  stroke-width: 3px;
  fill: none;
  stroke-dasharray: 5, 5; // Пунктирная линия
  transition: stroke 0.3s ease;

  &.active { // Если связь активна (например, предыдущий уровень пройден)
    stroke: #ffd700; // Золотой цвет активной связи
    stroke-dasharray: none; // Сплошная линия
  }
}

// Стили для узлов уровней (обновлено и дополнено из код1)
.level-node {
  position: absolute;
  width: 40px;  // Можно оставить из код2 или взять из своего проекта
  height: 40px; // Можно оставить из код2 или взять из своего проекта
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 16px; // Можно оставить из код2 или взять из своего проекта
  color: white;
  border: 2px solid white; // Базовая рамка из код1
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5); // Оставим тень из код2
  z-index: 2; // Над связями и картой
  transition: transform 0.2s ease, background-color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease; // Добавлен border-color из код1, box-shadow из код2

  &:hover {
    transform: scale(1.1);
    // background-color из код2 убран, так как он будет переопределяться статусами
  }

  // Статус по умолчанию (разблокирован, но не пройден) из код1
  &.active {
    background-color: #4a90e2; // Синий фон
    border-color: #ffffff;    // Белая рамка
    // box-shadow: 0 0 15px rgba(241, 196, 15, 0.8); // Свечение из код2 можно убрать или оставить, если нужно совместить
    // Если это текущий активный для ИГРЫ уровень (не просто разблокированный), можно добавить дополнительный класс или пересмотреть логику
  }

  // Уровень пройден на Normal из код1
  &.completed-normal {
    background-color: #5cb85c; // Зеленый фон
    border-color: #a0e0a0;     // Светло-зеленая рамка
    color: white;
    &:hover {
      background-color: #4cae4c; // Чуть темнее при наведении (пример)
      // transform: scale(1.1); // Уже есть базовый hover
    }
  }

  // Уровень пройден на Hard из код1
  &.completed-hard {
    background-color: #d9534f; // Красный фон
    border-color: #ff8f8c;     // Светло-красная рамка
    color: white;
    &:hover {
      background-color: #c9302c; // Чуть темнее при наведении (пример)
      // transform: scale(1.1); // Уже есть базовый hover
    }
  }

  // Уровень заблокирован из код1
  &.locked {
    background-color: #6c757d; // Серый фон
    border-color: #495057;     // Темно-серая рамка
    color: #adb5bd;            // Светло-серый текст
    cursor: not-allowed;
    &:hover {
      transform: none; // Убрать эффект увеличения при наведении
      background-color: #6c757d; // Фон не меняется
      border-color: #495057;   // Рамка не меняется
    }
  }
}


// --- НОВЫЕ ЭЛЕМЕНТЫ UI (Поверх карты) ---

// Общие стили для кнопок
.main-menu-button {
  position: absolute;
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.1s;
  z-index: 5; // Выше чем карта (z-index: 1) и узлы (z-index: 2)
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(2px); // Небольшой блюр фона под кнопкой (опционально)

  &:hover {
    background: rgba(0, 0, 0, 0.7);
  }
    &:active {
      transform: scale(0.97);
  }

  &.icon-button {
    padding: 8px;
    border-radius: 12px;
    img {
      width: 40px; height: 40px; object-fit: contain; display: block;
    }

    // <<< НАЧАЛО ИЗМЕНЕНИЙ ИЗ КОД1 >>>
    &.rewards-chest-button {
      position: relative; // Для позиционирования псевдоэлемента

      // Класс, который добавляется, когда есть награды
      &.has-indicator::after {
        content: ''; // Обязательно для псевдоэлемента
        position: absolute;
        top: 2px;    // Положение точки (подбери)
        right: 2px;   // Положение точки (подбери)
        width: 8px;   // Размер точки
        height: 8px;  // Размер точки
        background-color: red; // Цвет индикатора
        border-radius: 50%;    // Делаем круглым
        border: 1px solid white; // Белая обводка для контраста (опционально)
        box-shadow: 0 0 3px red;  // Легкое свечение (опционально)
      }

      // Если предпочитаешь отдельный div для точки (закомментировано как в код1):
      // .notification-dot {
      //   position: absolute;
      //   top: 2px; right: 2px;
      //   width: 8px; height: 8px;
      //   background-color: red;
      //   border-radius: 50%;
      //   border: 1px solid white;
      // }
    }
    // <<< КОНЕЦ ИЗМЕНЕНИЙ ИЗ КОД1 >>>
  }
}


// Battle Pass (Снова позиционируется абсолютно)
.battle-pass-button {
  position: absolute;
  top: calc(env(safe-area-inset-top, 0px) + 15px); /* Отступ от верхнего края с учетом безопасной зоны */
  left: 50%;
  transform: translateX(-50%); /* Центрирование по горизонтали */
  z-index: 5;
  padding: 10px 25px;
  border-radius: 8px;
  font-size: 16px;
  font-weight: bold;
  align-items: center;
}

// Левая колонка (Почта и Сундук)
.main-menu-left-column {
  position: absolute; // Колонка тоже позиционируется абсолютно
  top: 165px;                       // (Пример: 140px (top BP) + ~40px (height BP) + 20px (gap) = 200px)
  left: 10px;     // !!! ПОДБЕРИ ЗНАЧЕНИЕ: Тот же отступ слева, что и у BattlePass
  display: flex;
  flex-direction: column;
  gap: 15px;        // Пространство между Почтой и Сундуком
  z-index: 5;
  // УБРАЛИ: align-items: flex-start; - больше не нужно

  // Кнопки внутри колонки НЕ ДОЛЖНЫ быть absolute
  .main-menu-button { // Это общие стили для кнопок в колонке, они остаются
    position: relative; // Важно! Сбросить absolute
    top: auto;
    left: auto;
    transform: none;

    // Стили для иконочных кнопок внутри колонки
    // Убедимся, что этот блок не конфликтует с глобальным .icon-button
    // и применяется именно к кнопкам ВНУТРИ .main-menu-left-column
    &.icon-button {
      padding: 8px; // Меньшие падинги
      border-radius: 12px;
      width: 56px;  // Пример: Задать фиксированную ширину/высоту для квадратности
      height: 56px; // width/height = (иконка 40px + padding 8px*2)
      box-sizing: border-box; // Чтобы padding был включен в width/height

      img {
        width: 40px;
        height: 40px;
        object-fit: contain;
        display: block;
      }
    }
  }
}

// Правая колонка
.main-menu-right-column {
  position: absolute;
  top: 165px; // Примерный отступ справа сверху (ниже, как просили)
  right: 10px;
  display: flex;
  flex-direction: column;
  gap: 15px;
  z-index: 5; // Выше карты
  .main-menu-button {
    position: relative; top: auto; right: auto; transform: none; // Сброс absolute
    // Если внутри правой колонки тоже есть icon-button,
    // и они должны иметь те же размеры, что и в левой,
    // можно либо скопировать стили .icon-button из .main-menu-left-column,
    // либо вынести их в более общий класс, если структура позволяет.
    // Например:
    // &.icon-button {
    //   padding: 8px;
    //   border-radius: 12px;
    //   width: 56px;
    //   height: 56px;
    //   box-sizing: border-box;
    //   img { width: 40px; height: 40px; object-fit: contain; display: block; }
    // }
  }
}

// Название главы (Как было, но можно поднять z-index)
.chapter-name {
  position: absolute;
  bottom: 85px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 5; // Выше карты
  font-size: 20px;
  font-weight: bold;
  color: white;
  text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.8);
  background-color: rgba(0, 0, 0, 0.4);
  padding: 5px 15px;
  border-radius: 15px;
  pointer-events: none; // Не мешает кликам по карте под ним
}

// --- Попапы и Оверлеи (Как было) ---
.level-popup,
.level-loading-overlay {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100; // Очень высоко
}
.level-popup { background: rgba(0, 0, 0, 0.7); }
.level-loading-overlay { background: rgba(0, 0, 0, 0.85); z-index: 101; } // Самый высокий

.level-popup-box {
  background: #2d3748; padding: 25px 35px; border-radius: 12px; color: white;
  text-align: center; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5); min-width: 280px;
  border: 1px solid #4a5568;

  h3 { margin-top: 0; margin-bottom: 15px; font-size: 1.1rem;}
  p { margin-top: 12px; color: #cbd5e1; font-size: 0.9rem;}
}

.popup-buttons {
  display: flex; justify-content: center; gap: 15px; margin-top: 20px;
  button {
    padding: 10px 20px; border-radius: 8px; border: none; cursor: pointer;
    font-weight: 600; font-size: 0.9rem;
    transition: background-color 0.2s, transform 0.1s;
    &:active { transform: scale(0.97); }

    &:first-child:not(:disabled) { background-color: #4CAF50; color: white; }
    &:first-child:hover:not(:disabled) { background-color: #5cb85c; }
    &:last-child:not(:disabled) { background-color: #718096; color: white; }
    &:last-child:hover:not(:disabled) { background-color: #8592a6; }
    &:disabled { background-color: #555 !important; color: #aaa !important; cursor: default; opacity: 0.7;}
  }
}

.loading-text { color: white; font-size: 1.2rem; }
.loading-spinner {
  border: 4px solid rgba(255, 255, 255, 0.3); border-left-color: #fff;
  border-radius: 50%; width: 40px; height: 40px;
  animation: spin 1s linear infinite; margin-bottom: 15px;
}
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

// --- Кнопка Reset (Как было) ---

.reset-button {
  position: absolute; // Позиционируем относительно .main-menu (если у него position: relative) или viewport
  // Отступы от нижнего левого угла, УЧИТЫВАЯ безопасные зоны
  left: calc(env(safe-area-inset-left, 0px) + 15px);   // 15px от левого края + safe area
  bottom: calc(env(safe-area-inset-bottom, 0px) + 70px); // 15px от нижнего края + safe area
  
  // Если у тебя есть навбар внизу фиксированной высоты (например, 60px),
  // то bottom нужно будет поднять еще выше:
  // bottom: calc(env(safe-area-inset-bottom, 0px) + 60px + 15px); // 60px (навбар) + 15px (зазор)

  background-color: #dc3545; // Красный цвет для опасной кнопки
  color: white;
  padding: 8px 12px;
  border: none;
  border-radius: 5px;
  font-size: 0.9em;
  font-weight: bold;
  cursor: pointer;
  box-shadow: 0 2px 5px rgba(0,0,0,0.3);
  z-index: 1100; // Поверх других элементов меню

  &:hover {
    background-color: #c82333; // Темнее при наведении
  }
}