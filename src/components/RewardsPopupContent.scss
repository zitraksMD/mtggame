// src/components/RewardsPopupContent.scss

.rewards-popup-content {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
  }
  
  // --- Этапы ---
  .stage-tabs {
    display: flex;
    justify-content: center;
    flex-wrap: wrap; // Перенос табов, если их много
    margin-bottom: 15px;
    background-color: rgba(0, 0, 0, 0.2);
    padding: 5px;
    border-radius: 8px;
  }
  
  .stage-tab {
    padding: 8px 15px;
    margin: 3px 5px; // Отступы для переноса строк
    border: 1px solid transparent;
    background-color: #4a5568; // Взято из код1/код2 (совпадало)
    color: #cbd5e1;
    border-radius: 6px;
    cursor: pointer;
    transition: background-color 0.2s, border-color 0.2s;
    font-weight: 500;
    display: inline-flex; // Для иконки замка
    align-items: center;   // Для иконки замка
  
    &:hover:not(.active):not(:disabled):not(.locked) {
      background-color: #5a6578;
    }
  
    &.active {
      background-color: #718096;
      color: white;
      border-color: #a0aec0;
      font-weight: 600;
      cursor: default;
    }
    &:disabled { // Общие стили для неактивного состояния
      opacity: 0.5;
      cursor: not-allowed;
    }
  
    // Стили для заблокированного таба (из код2, слегка дополнено)
    &.locked {
      opacity: 0.6;
      cursor: not-allowed;
      background-color: #374151; // Более темный фон
      border-color: transparent;
      // position: relative; // Не обязательно, если иконка просто внутри
  
      &:hover {
        background-color: #374151; // Не меняем цвет при ховере
      }
  
      // Иконка внутри таба
      .stage-lock-icon {
        margin-right: 5px; // Отступ для иконки замка
        font-size: 0.8em; // Маленький замок
        filter: grayscale(80%);
        // color: #9ca3af; // Можно добавить цвет
      }
    }
  }
  
  // --- Дорожка наград ---
  
  // Обертка для трека наград (из код1 - для позиционирования начальной линии)
  .rewards-track-wrapper {
      flex-grow: 1; // Занимает доступное пространство
      position: relative; // Контекст для позиционирования начальной линии
      overflow: hidden; // Чтобы скроллбар контейнера работал
  }
  
  // Контейнер с уровнями и скроллом (Объединение код1 и код2)
  .rewards-track-container {
      height: 100%; // Занимает всю высоту обертки
      overflow-y: auto; // Скролл
      padding: 5px 10px 5px 15px; // Отступы (как в код1 и код2)
      margin-right: -10px; // Компенсация ширины скроллбара (как в код1 и код2)
      display: flex;
      flex-direction: column;
      gap: 5px; // Используем gap (как в код1 и код2)
  
      // Стилизация скроллбара (из код2, т.к. в код1 они пропущены `/* ... */`)
      &::-webkit-scrollbar {
          width: 5px;
      }
      &::-webkit-scrollbar-track {
          background: rgba(0,0,0,0.1);
          border-radius: 3px;
      }
      &::-webkit-scrollbar-thumb {
          background: #5a6578;
          border-radius: 3px;
      }
      &::-webkit-scrollbar-thumb:hover {
          background: #718096;
      }
  }
  
  .reward-row {
      display: grid;
      grid-template-columns: 1fr auto 1fr; // Награда | Разделитель | Награда
      align-items: center; // Вертикальное выравнивание по центру
      min-height: 75px; // Минимальная высота ряда (из код1/код2)
      position: relative; // Для позиционирования линий (из код1/код2)
  }
  
  // --- Центральный разделитель ---
  .level-connector {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 50px; // Ширина центральной части (из код1/код2)
      position: relative; // Контекст для ::before и желтого сегмента (из код1)
      align-self: stretch; // Растянуть по высоте ряда (из код1/код2)
      z-index: 1; // Выше серой линии, но НИЖЕ номера уровня (из код1)
  
      // --- СЕРАЯ ЛИНИЯ (Основа) (из код1, адаптировано под растягивание) ---
      &::before {
          content: '';
          position: absolute;
          // Растягиваем от верха до низа родителя (.level-connector)
          top: 0;
          bottom: 0;
          left: 50%;
          transform: translateX(-50%);
          width: 4px; // Толщина серой линии (из код1)
          background-color: #4a5568; // Цвет серой линии (из код1)
          z-index: 0; // Самый нижний слой (из код1)
      }
      // Коррекция для первой/последней серой линии (из код1 - важно для визуальной целостности)
      .reward-row:first-child &::before { top: 50%; }
      .reward-row:last-child &::before { bottom: 50%; }
  }
  
  // --- НОМЕР УРОВНЯ ---
  .level-number {
      background-color: #4a5568; // из код2
      color: #cbd5e1; // из код2
      width: 30px; // из код2
      height: 30px; // из код2
      border-radius: 50%; // из код2
      display: flex; // из код2
      align-items: center; // из код2
      justify-content: center; // из код2
      font-weight: bold; // из код2
      font-size: 14px; // из код2
      border: 2px solid #718096; // из код2
      position: relative; // из код1/код2
      z-index: 10; // !!! Поверх ВСЕХ линий !!! (из код1)
      transition: background-color 0.2s, border-color 0.2s, color 0.2s; // из код2
  
      // Состояние пройденного уровня (из код1/код2)
      &.completed {
        background-color: #718096; // из код2
        border-color: #a0aec0; // из код2
        color: white; // из код2
        // Можно добавить стили из код1, если они отличаются и нужны
      }
  }
  
  // --- ЖЕЛТЫЙ СЕГМЕНТ ЛИНИИ (для пройденных) --- (из код1)
  // Отображается внутри .level-connector, если уровень пройден
  // (Предполагается, что этот класс будет добавлен динамически к .level-connector или .reward-row)
  .progress-line-segment {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      bottom: 50%; // Начинается от центра текущего номера
      // Высота = высота ряда + gap (5px) - Тянется вверх до центра предыдущего
      height: calc(100% + 5px); // (из код1)
      width: 6px; // Чуть толще серой (из код1)
      background-color: #facc15; // Ярко-желтый цвет (из код1)
      z-index: 1; // !!! Выше серой линии, но НИЖЕ номера уровня !!! (из код1)
      border-radius: 3px; // (из код1)
  
      // У первого элемента ряда желтая линия рисуется только до его центра (из код1)
      .reward-row:first-child & {
          height: 50%;
      }
      // Если анимация из код2 используется, можно добавить ее сюда:
      // background: linear-gradient(...) // (из код2)
      // background-size: 200% 100%; // (из код2)
      // animation: flow-animation 2s linear infinite; // (из код2)
  }
  
  // --- НАЧАЛЬНАЯ ЖЕЛТАЯ ЛИНИЯ (до уровня 1) --- (из код1)
  // Добавляется внутрь .rewards-track-wrapper
  .initial-progress-line {
      position: absolute;
      top: 0; // Начинается от верха обертки
      left: 50%; // Центрируется по горизонтали относительно обертки
      // Смещаем влево на половину ширины центральной колонки (50px / 2 = 25px)
      // и на половину своей ширины (6px / 2 = 3px)
      // Эта логика зависит от того, к чему позиционируется left: 50%.
      // Если к обертке, то нужно учесть padding контейнера:
      // left: calc(15px + 25px); // Центр колонки относительно края контейнера
      // transform: translateX(-3px); // Центрируем саму линию
      // Или как в код1, если left:50% относится к обертке:
      transform: translateX(calc(-25px - 3px));
      width: 6px; // Такая же толщина, как у желтых сегментов (из код1)
      // Высота до центра первого кружка (половина высоты ряда + половина gap)
      // Нужно подобрать точнее, 75px/2 + 5px/2 = ~40px
      height: 40px; // !!! ЗНАЧЕНИЕ ИЗ КОД1 - ПОДБЕРИ ТОЧНЕЕ ПРИ НЕОБХОДИМОСТИ !!!
      background-color: #facc15; // Желтый цвет (из код1)
      z-index: 1; // Выше серой линии, но ниже первого номера (из код1)
      border-radius: 0 0 3px 3px; // Скругляем нижние углы (из код1)
      // Если используется анимация из код2 для желтых линий:
      // background: linear-gradient(...) // (из код2)
      // background-size: 200% 100%; // (из код2)
      // animation: flow-animation 2s linear infinite; // (из код2)
  }
  
  // --- Анимация из код2 (если нужна) ---
  @keyframes flow-animation {
      0% { background-position: 0% 50%; }
      100% { background-position: 100% 50%; }
  }
  // Селектор .progress-line-active из код2 был заменен на .progress-line-segment из код1,
  // т.к. они выполняли схожую функцию. Если нужна отдельная логика/стили для "активной"
  // (текущей, не завершенной) линии, нужно будет добавить .progress-line-active отдельно.
  
  // --- Слоты наград --- (Взяты из код2, т.к. более полные)
  .reward-slot {
    background-color: rgba(0, 0, 0, 0.3);
    border: 1px solid #4a5568;
    border-radius: 8px;
    padding: 8px;
    min-height: 85px; // Оставляем ОДНО значение min-height
    display: flex;
    align-items: center;      // Центрируем блок иконки по вертикали
    justify-content: center; // Центрируем блок иконки по горизонтали
    position: relative;      // Оставляем relative для дочерних .checkmark, .lock-icon и т.д.
    overflow: hidden;
    cursor: default;
    transition: transform 0.1s ease-out, box-shadow 0.2s ease, border-color 0.2s ease;
  
    // --- Сама иконка ---
    .reward-icon {
      width: 52px;
      height: 52px;
      position: relative; // !!! ДОБАВЛЕНО position: relative !!!
      border-radius: 6px; // Увеличили скругление
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
      border: 1px solid rgba(255, 255, 255, 0.15); // Чуть заметнее рамка
      background-color: rgba(0, 0, 0, 0.2); // Фон под иконкой
      flex-shrink: 0; // Запрещаем иконке сжиматься, если слот узкий
    }
  
    // --- Количество (стили позиционирования должны быть здесь) ---
    .reward-icon .reward-amount {
      position: absolute;
      bottom: 2px;
      right: 0px;
      background-color: rgba(0, 0, 0, 0.65);
      color: #fff;
      padding: 1px 5px;
      border-radius: 3px;
      font-size: 11px;
      font-weight: 600;
      line-height: 1.1;
      text-shadow: 1px 1px 1px rgba(0,0,0,0.7);
      z-index: 1; // Поверх фона иконки
    }
  
    // --- Состояния награды ---
    &.claimable {
      border-color: #facc15;
      cursor: pointer;
      box-shadow: 0 0 8px rgba(250, 204, 21, 0.4);
  
      &:hover {
        background-color: rgba(74, 85, 104, 0.4);
        transform: translateY(-1px); // Легкий подъем при ховере
        box-shadow: 0 2px 12px rgba(250, 204, 21, 0.6);
      }
        &:active {
          transform: translateY(0px); // Возврат при нажатии
        }
    }
  
    &.claimed {
      opacity: 0.6;
      border-color: #4a5568;
      box-shadow: none;
  
      .checkmark {
        position: absolute;
        top: 2px;
        right: 4px;
        font-size: 1.3rem; // Чуть меньше
        color: #4ade80;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.7);
      }
    }
  
    &.locked {
      opacity: 0.5;
      cursor: not-allowed;
      position: relative;
      background-color: rgba(0,0,0,0.5); // Темнее фон для заблокированных
  
      .lock-icon {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 1.8rem; // Меньше замок
        color: rgba(255, 255, 255, 0.5);
        text-shadow: 1px 1px 2px black;
      }
      // Можно скрыть иконку и количество под замком
      .reward-icon, .reward-amount {
          opacity: 0.3;
      }
    }
  
    .claim-indicator { // Надпись "Забрать"
        position: absolute;
        bottom: 2px; // Ближе к низу
        left: 0;
        right: 0;
        text-align: center;
        font-size: 9px; // Меньше шрифт
        font-weight: bold;
        color: #fde047; // Ярче желтый
        background: rgba(0,0,0,0.6);
        padding: 1px 0;
        border-radius: 0 0 3px 3px;
        pointer-events: none; // Чтобы не мешала клику
    }
  }
  
  // --- Иконки наград --- (Из код2, т.к. более полные)
  // Добавь сюда background-image для каждого типа:
  .reward-type-diamond .reward-icon {
    /* background-color: #2dd4bf; */ // Убираем/комментируем цвет-заглушку
    background-image: url('/assets/diamond-image.png'); // !!! УКАЖИ ПРАВИЛЬНЫЙ ПУТЬ !!!
  }
  .reward-type-ton_shard .reward-icon {
    /* background-color: #38bdf8; */
    background-image: url('/assets/toncoin-icon.png'); // !!! УКАЖИ ПРАВИЛЬНЫЙ ПУТЬ !!!
  }
  .reward-type-key .reward-icon {
      /* background-color: #facc15; */
      background-image: url('/assets/key-image.png'); // !!! УКАЖИ ПРАВИЛЬНЫЙ ПУТЬ !!!
  }
  // ... добавь другие типы, если нужно (energy, chest_common, chest_rare)
  
  
  // --- Футер --- (Из код2)
  .rewards-footer {
    display: flex;
    justify-content: space-between; // Распределить кнопки
    align-items: center;
    padding: 15px 20px;
    border-top: 1px solid #4a5568;
    margin-top: 15px;
    flex-shrink: 0; // Не сжимать футер
  }
  
  .claim-all-button, .purchase-button {
    padding: 10px 18px; // Чуть меньше падинг
    border-radius: 8px;
    border: none;
    cursor: pointer;
    font-weight: 600;
    font-size: 0.9rem;
    transition: background-color 0.2s, transform 0.1s;
    text-align: center;
  
    &:active { transform: scale(0.97); }
    &:disabled {
        background-color: #555 !important;
        color: #aaa !important;
        cursor: default;
        opacity: 0.7;
      }
  }
  
  .claim-all-button {
    background-color: #4CAF50;
    color: white;
      &:not(:disabled):hover { background-color: #5cb85c; }
  }
  
  .purchase-button {
    background-color: #facc15;
    color: #422006;
      &:hover { background-color: #fde047; }
  
    .price {
      font-size: 0.8rem;
      font-weight: bold;
      display: block;
    }
  }
  
  .paid-unlocked-indicator {
      color: #a3e635; // Лаймовый цвет
      font-weight: 600;
      font-size: 0.9rem;
  }