/* src/components/GlobalMap.scss */

// Основной контейнер экрана глобальной карты
.global-map-screen {
  width: 100%;
  height: 100vh; // Или 100% если родитель имеет высоту
  background: linear-gradient(160deg, #0f1a30 0%, #1a2a4a 100%);
  color: white;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden; // Важно для .global-map-viewport
  user-select: none;
}

// Шапка экрана глобальной карты
.global-map-header {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: calc(env(safe-area-inset-top, 0px) + 15px) 15px 15px 15px;
  width: 100%;
  box-sizing: border-box;
  position: relative;
  z-index: 10; // Поверх карты, но ниже TransitionOverlay
  // background-color: rgba(0,0,0,0.2); // Опционально из код1

  h1 { // Стили из код2, т.к. в код1 не определены
    margin: 0;
    font-size: 1.6em;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.5);
  }

  .map-back-button { // Стили из код2, т.к. в код1 не определены
    position: absolute;
    top: 15px; 
    left: env(safe-area-inset-left, 15px);
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 8px;
    padding: 8px 12px;
    font-size: 20px; 
    line-height: 1;
    cursor: pointer;
    transition: background-color 0.2s ease;

    &:hover {
      background-color: rgba(255, 255, 255, 0.2);
    }
  }
}

// Viewport для карты (из код1, заменяет .global-map-background из код2 в этой роли)
.global-map-viewport {
  flex-grow: 1; // Занимает все доступное место
  width: 100%;
  position: relative; // Для позиционирования .global-map-pannable-content
  overflow: hidden;   // ОЧЕНЬ ВАЖНО! Обрезает все, что выходит за пределы.
  cursor: grab;       // Курсор для перетаскивания (из код1)
  background-color: rgba(0,0,0,0.1); // Легкий фон для самого вьюпорта, если карта меньше (из код1)
  
  &:active {
    cursor: grabbing; // (из код1)
  }
}

// Перемещаемый и масштабируемый контент карты (из код1)
.global-map-pannable-content {
  position: absolute; // Чтобы можно было двигать через transform (x, y)
  // background-image: url('/assets/maps/earth_texture.jpg'); // Если текстура земли здесь (из код1)
  // background-size: 100% 100%; // (из код1)
  transform-origin: 0 0; // Важно для корректного масштабирования (из код1)
}

// Стиль для одной зоны на карте (ранее .continent-node в код2)
.zone-node { // Имя из код1
  position: absolute; // Позиционируется относительно .global-map-pannable-content (из код1)
  cursor: pointer;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  // transition и основные hover-эффекты (scale) создаются Framer Motion (философия код1)
  // padding, border, background-color, width, height - не задаются здесь по стилю код1,
  // так как предполагается, что размеры приходят из JS/данных (props) и применяются инлайн,
  // а Framer Motion управляет интерактивными анимациями.

  // Стили для hover :not(.locked):not(.not-implemented) управляются Framer Motion (из код1)
  // &:hover:not(.locked):not(.not-implemented) {
  //   // Framer Motion позаботится об анимации scale
  // }

  .zone-image { // Ранее .continent-image
    width: 100%; // Занимает всю ширину .zone-node (которая задана в JS/данных) (из код1)
    height: auto; // Сохраняет пропорции (из код1)
    max-height: 70%; // Ограничение, чтобы текст поместился (из код1)
    object-fit: contain; // (из код1 и код2)
    margin-bottom: 5px; // (из код1 и код2)
    border-radius: 8px; // Скругление из код2 .continent-image, сохранено
  }

  .zone-label { // Ранее .continent-label
    color: white; // (из код1)
    font-size: 12px; // (из код1)
    font-weight: 500; // (из код1)
    text-shadow: 1px 1px 1px rgba(0,0,0,0.7); // (из код1)
    // white-space: nowrap; // Если нужно, чтобы не переносился (комментарий из код1)
  }
  
  // Стиль для заблокированной зоны (реализованной, но заблокированной)
  // Адаптировано из .locked в код2
  &.locked {
    cursor: not-allowed; 
    .zone-image {
      filter: grayscale(90%) brightness(0.6); // Визуальное приглушение из код2
    }
    .zone-label {
      color: #888; // Текст тоже приглушаем (из код2)
    }
    // Если Framer Motion's whileHover={{ scale: 1.1 }} применяется,
    // и вы хотите его отключить для .locked, это нужно делать в JS,
    // например, не передавая whileHover проп для заблокированных зон.
    // CSS :hover здесь не остановит Framer Motion transform.
  }
  
  // Стиль для нереализованной зоны
  // Адаптировано из .not-implemented в код2
  &.not-implemented {
    cursor: default;
    // filter: grayscale(1); // Можно добавить общее обесцвечивание всей зоны, если требуется

    .zone-image {
      opacity: 0.5; // Делаем изображение полупрозрачным (из код2)
      filter: grayscale(1); // Можно и обесцветить изображение (из код2)
    }
    .zone-label, .zone-status-label { // Текст тоже приглушаем (из код2)
      color: #888;
    }
    // Как и для .locked, управление Framer Motion hover-эффектами лучше делать в JS.
  }

  // Иконка замка (адаптировано из .continent-lock-icon код2)
  .zone-lock-icon {
    position: absolute;
    top: 5px;
    right: 5px;
    font-size: 1.5em; // Усредненное значение или по вкусу
    color: yellow; 
    text-shadow: 0 0 5px black;
    pointer-events: none; // Чтобы не мешал клику
  }

  // Статус лейбл (например, "Скоро" или "% прохождения")
  // Адаптировано из .continent-status-label код2
  .zone-status-label {
    font-size: 0.9em;
    margin-top: 3px;
    // color: white; // По умолчанию, будет переопределено в .not-implemented на #888
  }
}